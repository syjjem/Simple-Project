name: EKS Cluster Deployment to k8s
on:
  push:
    branches:
      - master

jobs:
  eks-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Preparation
        run: echo "Preparing for EKS cluster deployment..."

      - name: Update Computer
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.24.0' # default is latest stable
        id: install

      - name: Setup OIDC
        run: |
          cluster_name=cluster-1
          oidc_id=$(aws eks describe-cluster --name $cluster_name --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
          aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4
          eksctl utils associate-iam-oidc-provider --cluster $cluster_name --approve

      - name: Create a Service Account
        run: |
          echo "Creating service account..."
          cluster_name=cluster-1
          eksctl create iamserviceaccount \ 
          --name ebs-csi-controller-sa \
          --namespace kube-system \
          --cluster $cluster_name \
          --role-name AmazonEKS_EBS_CSI_DriverRole \
          --role-only \
          --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
          --approve

      - name: Add the EBS-CSI addon
        run: |
          cluster_name=cluster-1
          echo "Adding EBS-CSI addon..."
          eksctl create addon --name aws-ebs-csi-driver --cluster $cluster_name \
          --service-account-role-arn arn:aws:iam::813574331204:role/AmazonEKS_EBS_CSI_DriverRole --force

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        env:
          IMAGE_NAME: update-testing
          VERSION: 1
          USERNAME: syjjem
        run: |
          docker build -t $USERNAME/$IMAGE_NAME:$VERSION .
          docker push $USERNAME/$IMAGE_NAME:$VERSION


      - name: Update kube config
        run: aws eks update-kubeconfig --name primuslearning
            

      - name: Install Helm
        run: |
          helm template project project
          helm install project project

      - name: Install Prometheus
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add stable https://charts.helm.sh/stable
          helm repo update
          helm install prometheus prometheus-community/prometheus
      
      